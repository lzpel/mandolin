openapi: 3.1.0
info:
  title: Multi-OAuth Login API
  version: 1.0.0
  description: |
    A service where users can log in via **GitHub** or **Google**, then receive a self-issued JWT
    used for subsequent API calls (such as `/users/me`).

servers:
  - url: https://api.example.com
    description: Production server

paths:
  /auth/github/login:
    get:
      summary: Redirect user to GitHub OAuth2
      description: |
        Redirects the client to GitHub's OAuth2 authorization URL.
        The user authorizes and is redirected back to `/auth/callback`.
      responses:
        "302":
          description: Redirect to GitHub authorization URL

  /auth/google/login:
    get:
      summary: Redirect user to Google OAuth2
      description: |
        Redirects the client to Google's OAuth2 authorization URL.
        The user authorizes and is redirected back to `/auth/callback`.
      responses:
        "302":
          description: Redirect to Google authorization URL

  /auth/callback:
    get:
      summary: OAuth2 callback endpoint
      description: |
        Handles the OAuth2 callback from either GitHub or Google.
        Exchanges the authorization code for tokens, verifies the user,
        creates or retrieves the user record, and issues an internal JWT.
      parameters:
        - name: code
          in: query
          required: true
          schema:
            type: string
          description: Authorization code returned by the OAuth2 provider.
        - name: state
          in: query
          required: false
          schema:
            type: string
          description: Opaque value used to maintain state between request and callback.
      responses:
        "200":
          description: Successfully issued internal JWT.
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: Self-issued JWT for authenticated requests.
                  token_type:
                    type: string
                    example: Bearer
                  expires_in:
                    type: integer
                    example: 3600
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      provider:
                        type: string
                        enum: [google, github]
                      email:
                        type: string
                      name:
                        type: string

  /users/me:
    get:
      summary: Get current user info
      description: |
        Returns the authenticated user's information.
        Requires a valid **self-issued JWT** obtained from `/auth/callback`.
      security:
        - ServiceJWT: []
      responses:
        "200":
          description: Authenticated user info
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  email:
                    type: string
                  name:
                    type: string
                  provider:
                    type: string
                    enum: [google, github]
        "401":
          description: Unauthorized or invalid token

components:
  securitySchemes:
    OAuth2_Google:
      type: oauth2
      description: Google OAuth2 Authorization Code Flow
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/v2/auth
          tokenUrl: https://oauth2.googleapis.com/token
          scopes:
            openid: Access user's basic profile
            email: Access user's email address
            profile: Access user's name and picture

    OAuth2_GitHub:
      type: oauth2
      description: GitHub OAuth2 Authorization Code Flow
      flows:
        authorizationCode:
          authorizationUrl: https://github.com/login/oauth/authorize
          tokenUrl: https://github.com/login/oauth/access_token
          scopes:
            read:user: Read the authenticated user's profile data
            user:email: Access user's email addresses

    ServiceJWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        Self-issued JWT generated by this API after successful OAuth2 login.
        Used for all authenticated endpoints such as `/users/me`.

security:
  - ServiceJWT: []
